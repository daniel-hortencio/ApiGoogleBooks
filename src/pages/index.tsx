import Head from "next/head";
import { useState } from "react";

import { useSearchKeyWords } from "contexts/SearchKeyWords";
import { useSearchResults } from "contexts/SearchResults";
import { findBooks } from "services/ApiFunctions/Book";

import WebsiteTemplate from "templates/Website";
import SearchBar from "components/SearchBar";
import GridContainer from "components/GridContainer";
import Card from "../components/Card";
import Text from "components/Text";
import Paginator from "components/Paginator";

export default function Home() {
  const { results, setResults } = useSearchResults();

  const [isLoading, setIsLoading] = useState<boolean>(false);
  const { searchKeyWords, setSearchKeyWords, maxResults } = useSearchKeyWords();
  const [paginationCurrent, setPaginationCurrent] = useState<number>(1);

  function handleSubmit(e) {
    e.preventDefault();

    setPaginationCurrent(1);

    if (searchKeyWords) {
      setIsLoading(true);
      findBooks({ searchKeyWords, maxResults })
        .then((data) => {
          setResults(data);
        })
        .catch((err) => console.log(err))
        .finally(() => setIsLoading(false));

      return;
    } else {
      setResults(null);
      setIsLoading(false);
    }
  }

  const handleChange = (value) => {
    const index = value - 1;

    setPaginationCurrent(value);

    if (searchKeyWords) {
      setIsLoading(true);
      findBooks({ searchKeyWords, startIndex: index * maxResults })
        .then((data) => {
          setPaginationCurrent(value);
          setResults(data);
        })
        .catch((err) => console.log(err))
        .finally(() => setIsLoading(false));

      return;
    } else {
      setResults(null);
      setIsLoading(false);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <WebsiteTemplate>
        <SearchBar
          value={searchKeyWords}
          handleChange={setSearchKeyWords}
          isLoading={isLoading}
          onSubmit={handleSubmit}
        />
        {results?.totalItems && (
          <Text
            text={`${results.totalItems} resultado${
              results.totalItems > 1 ? "s" : ""
            } encontrado${results.totalItems > 1 ? "s" : ""}`}
            style={{ margin: "1rem 0" }}
          />
        )}

        {results?.totalItems > maxResults && (
          <Paginator
            current={paginationCurrent}
            pageSize={maxResults}
            onChange={(page) => handleChange(page)}
            total={results?.totalItems}
          />
        )}

        <GridContainer>
          {results &&
            results?.items?.map((book) => (
              <Card
                key={book.id}
                id={book.id}
                title={book.volumeInfo.title}
                imageUrl={book.volumeInfo?.imageLinks?.thumbnail}
                description={book.volumeInfo.description}
                publishedDate={book.volumeInfo.publishedDate}
              />
            ))}
        </GridContainer>
      </WebsiteTemplate>
    </>
  );
}
